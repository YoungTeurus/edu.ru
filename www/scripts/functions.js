const siteURL = "http://edu.ru";

// –Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã–º?
let isUserLogined = false;

const testsStatuses = {
    completed: {text: "‚òë –í—ã–ø–æ–ª–Ω–µ–Ω"},
    completedCanTryAgain: {text: "‚úî –í—ã–ø–æ–ª–Ω–µ–Ω, –¥–æ—Å—Ç—É–ø–µ–Ω"},
    completedInProgress: {text: "‚úî‚≠ï –í—ã–ø–æ–ª–Ω–µ–Ω, –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ"},
    inProgress: {text: "‚≠ï –í –ø—Ä–æ—Ü–µ—Å—Å–µ"},
    available: {text: "‚ùî –î–æ—Å—Ç—É–ø–µ–Ω"},
    availableInTime: {text: "üîí –°–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω"},
    notAvailable: {text: "üîí –ù–µ –¥–æ—Å—Ç—É–ø–µ–Ω"},
}

const triesStasuses = {
    completed: {text: "‚úî –ó–∞–∫–æ–Ω—á–µ–Ω–∞"},
    inProgress: {text: "‚≠ï –í –ø—Ä–æ—Ü–µ—Å—Å–µ"},
}

const scoreRanges = {
    ranges: [0, 50, 75, 90, 100],
    unknown: "‚ùì",
    0: "‚ùå",
    50: "‚ùó",
    75: "‚úî",
    90: "‚úÖ",
    100: "‚öú",
}

function ConnectException(message) {
    this.message = message;
    this.name = "–ü—Ä–æ–±–ª–µ–º–∞ —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º";
}

// –í—ã–∑—ã–≤–∞–µ—Ç ajax —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É url —Å —É–∫–∞–∑–∞–Ω–Ω–æ–π data.
// –í —Å–ª—É—á–∞–µ —É—Å–ø–µ—Ö–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç msg, –≤ —Å–ª—É—á–∞–µ –Ω–µ—É–¥–∞—á–∏ –≤—ã–∑—ã–≤–∞–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–µ failException.
async function ajaxWithData(type, url, data, failException) {
    return $.ajax({
        type: type,
        url: url,
        data: data,
        dataType: "json",
    })
        .done(msg => {
            return (msg);
        })
        .fail(() => {
            throw failException;
        });
}

async function postAjax(url, data, failException) {
    return ajaxWithData('POST', url, data, failException);
}

// –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç –≤—Ö–æ–¥ –≤ –∞–∫–∫–∞—É–Ω—Ç –ø–æ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º –¥–∞–Ω–Ω—ã–º.
async function logIntoAccount(userLogin, userPassword) {
    let data = {form: {}};
    data["form"]["action"] = "login";
    data["form"]["userLogin"] = userLogin;
    data["form"]["userPassword"] = userPassword;
    console.log(data);

    return postAjax(
        siteURL + '/login.php',
        data,
        new ConnectException("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≤—Ö–æ–¥ –≤ –∞–∫–∫–∞–∫—É–Ω—Ç!")
    );
}

// –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç –≤—ã—Ö–æ–¥ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞.
async function logOutOfAccount() {
    let data = {form: {}};
    data["form"]["action"] = "logout";
    console.log(data);

    return postAjax(
        siteURL + '/login.php',
        data,
        new ConnectException("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≤—ã—Ö–æ–¥ –∏–∑ –∞–∫–∫–∞–∫—É–Ω—Ç–∞!")
    );
}

// –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∞–∫–∫–∞—É–Ω—Ç–∞ –ø–æ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º –¥–∞–Ω–Ω—ã–º.
async function registerAccount(userLogin, userPassword, userEmail) {
    let data = {form: {}};
    data["form"]["action"] = "register";
    data["form"]["userLogin"] = userLogin;
    data["form"]["userEmail"] = userEmail;
    data["form"]["userPassword"] = userPassword;
    $("#loginError").text("");  // –û—á–∏—â–∞–µ–º –∏–º–µ—é—â–∏–µ—Å—è –æ—à–∏–±–∫–∏ –≤—Ö–æ–¥–∞
    console.log(data);

    return postAjax(
        siteURL + '/login.php',
        data,
        new ConnectException("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤ –∞–∫–∫–∞–∫—É–Ω—Ç!")
    );
}

// –í–æ–≤–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ –≤—Å–µ –ø–æ–ª—è userRegisterModal –≤–µ—Ä–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã.
function validateRegisterForm() {
    let isCorrect = true;

    // –°–±—Ä–æ—Å –æ—à–∏–±–∫–∏ –ª–æ–≥–∏–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é:
    $("#ruserLoginValidation")
        .text("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —ç—Ç–æ –ø–æ–ª–µ!");

    let rul = $("#ruserLogin");
    let rue = $("#ruserEmail");
    let rup = $("#ruserPassword");
    let rupa = $("#ruserPasswordAgain");

    if (rul.val().length === 0) {
        rul[0].classList.add('is-invalid');
        isCorrect = false;
    } else {
        rul[0].classList.remove('is-invalid');
    }

    if (rue.val().length === 0) {
        rue[0].classList.add('is-invalid');
        isCorrect = false;
    } else {
        rue[0].classList.remove('is-invalid');
    }

    if (rup.val().length === 0) {
        rup[0].classList.add('is-invalid');
        rupa[0].classList.add('is-invalid');
        isCorrect = false;
    } else {
        rup[0].classList.remove('is-invalid');
        if (rup.val() !== rupa.val()) {
            rupa[0].classList.add('is-invalid');
            isCorrect = false;
        } else {
            rupa[0].classList.remove('is-invalid');
        }
    }

    return isCorrect;
}

// –í–æ–≤–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ –≤—Å–µ –ø–æ–ª—è userLoginModal –≤–µ—Ä–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã.
function validateLoginForm() {
    let isCorrect = true;

    // –°–±—Ä–æ—Å –æ—à–∏–±–∫–∏ –ø–∞—Ä–æ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é:
    $("#luserPasswordValidation")
        .text("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —ç—Ç–æ –ø–æ–ª–µ!");

    let lul = $("#luserLogin");
    let lup = $("#luserPassword");

    if (lul.val().length === 0) {
        lul[0].classList.add('is-invalid');
        isCorrect = false;
    } else {
        lul[0].classList.remove('is-invalid');
    }

    if (lup.val().length === 0) {
        lup[0].classList.add('is-invalid');
        isCorrect = false;
    } else {
        lup[0].classList.remove('is-invalid');
    }

    return isCorrect;
}

// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –∏–Ω–∞—á–µ - false.
async function checkUserLoginStatus() {
    let data = {form: {}};
    data["form"]["action"] = "checkLoginStatus";
    console.log(data);
    return $.ajax({
        type: "POST",
        url: siteURL + '/login.php',
        data: data,
        dataType: "json",
    })
        .done(msg => {
            return (msg["logined"]);
        })
        .fail(() => {
            throw new ConnectException("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —É—Å—Ç–∞–Ω–æ–ª–≤–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞!");
        });
}

// –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ.
async function getUserInfo() {
    let data = {form: {}};
    data["form"]["action"] = "getUserInfo";
    console.log(data);
    return postAjax(
        siteURL + '/login.php',
        data,
        new ConnectException("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ!")
    );
}

// –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ç–µ—Å—Ç–∞—Ö.
async function getAvailableTests() {
    let data = {form: {}};
    data["form"]["action"] = "getAvailableTests";
    console.log(data);
    return postAjax(
        siteURL + '/tests.php',
        data,
        new ConnectException("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–∞–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤!")
    );
}

// –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–µ—Ä–≤–µ—Ä—É –∑–∞–ø—Ä–æ—Å –Ω–∞ –Ω–∞—á–∞–ª–æ –Ω–æ–≤–æ–π –ø–æ–ø—ã—Ç–∫–∏ –Ω–∞—á–∞—Ç—å —Ç–µ—Å—Ç.
async function startNewTry(testId){
    let data = {form: {}};
    data["form"]["action"] = "startNewTry";
    data["form"]["testId"] = testId;
    console.log(data);
    return postAjax(
        siteURL + '/tests.php',
        data,
        new ConnectException("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –Ω–∞—á–∞–ª–æ –Ω–æ–≤–æ–π –ø–æ–ø—ã—Ç–∫–∏ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–∞!")
    );
}

// –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–µ—Ä–≤–µ—Ä—É –∑–∞–ø—Ä–æ—Å
async function getTestTries(testId) {
    let data = {form: {}};
    data["form"]["action"] = "getTestTries";
    data["form"]["testId"] = testId;
    console.log(data);
    return postAjax(
        siteURL + '/tests.php',
        data,
        new ConnectException("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ø—Ç—ã–∫–∞—Ö –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–∞!")
    );
}

// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
async function asyncGetTriesTable(testId) {
    return new Promise(async (resolve, reject) => {
        let msg = await getTestTries(testId);
        console.log(msg);
        if (msg["success"]) {
            if (!msg["error"]) {
                resolve(msg["testTries"]);
            } else {
                reject(msg["errorText"]);
            }
        } else {
            reject("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞!")
        }
    });
}

// –ü–æ–ª—É—á–∞–µ—Ç string, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π float –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ [0,1] –∏–ª–∏ -1. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç —Å emoji –∏ –ø—Ä–æ—Ü–µ–Ω—Ç–∞–º–∏.
function getScoreText(score) {
    if (score === "-1"){
        return scoreRanges.unknown;
    }
    score = parseFloat(score);
    let percent = score * 100;
    percent = Math.round(percent);
    for (let i = 0; i < scoreRanges.ranges.length; i++) {
        if (percent === scoreRanges.ranges[i]) {
            return (scoreRanges[scoreRanges.ranges[i]].concat(percent.toString()).concat('%'));
        } else if (percent <= scoreRanges.ranges[i]) {
            return (scoreRanges[scoreRanges.ranges[i - 1]].concat(percent.toString()).concat('%'));
        }
    }
}

// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç jQuery, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Å–µ—Ö –ø–æ–ø—ã—Ç–∫–∞—Ö –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤.
// –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–æ–ø–æ–ª–Ω—è–µ—Ç—Å—è async-–æ–º.
function generateTriesTable(testId) {
    let tbody = $("<tbody>");

    // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ø—ã—Ç–∫–∏ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∏ –∑–∞–ø–æ–ª–Ω—è–µ–º —Ç–∞–±–ª–∏—Ü—É —Å –ø–æ–º–æ—â—å—é async
    asyncGetTriesTable(testId).then(
        testTries => {
            if (testTries.length > 0) {
                // –ï—Å–ª–∏ –±—ã–ª–∞ –Ω–∞–π–¥–µ–Ω–∞ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–∞ –ø–æ–ø—ã—Ç–∫–∞...
                testTries.forEach(
                    testTry => {
                        // –î–ª—è –∫–∞–∂–¥–æ–π –ø–æ–ø—ã—Ç–∫–∏ –¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É —Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏:
                        tbody.append(
                            $("<tr>")
                                .append(
                                    // –ù–æ–º–µ—Ä —Ç–µ—Å—Ç–∞
                                    $("<th scope=\"row\">").text(testTry["try"])
                                )
                                .append(
                                    // –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è
                                    $("<td>").text(testTry["startedDatetime"])
                                )
                                .append(
                                    // –û—Ü–µ–Ω–∫–∞ —Ç–µ—Å–∏—Ä–æ–≤–∞–Ω–∏—è
                                    $("<td>").text(
                                        (testTry["finished"] === "1" ?
                                                // –ï—Å–ª–∏ —Ç–µ—Å—Ç –±—ã–ª –ø—Ä–æ–π–¥–µ–Ω:
                                                getScoreText(testTry["score"])
                                                :
                                                // –ï—Å–ª–∏ —Ç–µ—Å—Ç –µ—â—ë –≤ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ:
                                                "-"
                                        ))
                                )
                                .append(
                                    // –°—Ç–∞—Ç—É—Å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                                    $("<td>").text(
                                        (testTry["finished"] === "1" ?
                                                // –ï—Å–ª–∏ —Ç–µ—Å—Ç –±—ã–ª –ø—Ä–æ–π–¥–µ–Ω:
                                                triesStasuses.completed.text
                                                :
                                                // –ï—Å–ª–∏ —Ç–µ—Å—Ç –µ—â—ë –≤ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ:
                                                triesStasuses.inProgress.text
                                        ))
                                )
                                .append(
                                    // –ö–Ω–æ–ø–∫–∞ "–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å"/"–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å"
                                    $("<td>").append(
                                        (testTry["finished"] === "1" ?
                                                // –ï—Å–ª–∏ —Ç–µ—Å—Ç –±—ã–ª –ø—Ä–æ–π–¥–µ–Ω:
                                                $("<button class=\"btn btn-outline-secondary\">").data("try", testTry["try"]).text("–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å")
                                                :
                                                // –ï—Å–ª–∏ —Ç–µ—Å—Ç –µ—â—ë –≤ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ:
                                                $("<button class=\"btn btn-primary\">").data("try", testTry["try"]).text("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å")
                                                    .on('click', () => {
                                                        const testUrl = siteURL + "/test.html?testId="+testId;
                                                        openUrlInNewTab(testUrl);
                                                        // TODO: –ø–µ—Ä–µ–¥–µ–ª–∞—Ç—å —Ç–∞–∫, —á—Ç–æ–±—ã –≤—Å—Ç–∞–≤–ª—è—Ç—å —Å—é–¥–∞ –Ω–µ –≤–µ—Å—å –∫–æ–¥ Modal-–∞
                                                        showModal(
                                                            "<h5 class=\"modal-title\">–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ç–µ—Å—Ç</h5>\n" +
                                                            "                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"–ó–∞–∫—Ä—ã—Ç—å\"></button>",
                                                            "<div class=\"container text-center\">\n" +
                                                            "                        <div class=\"row col-6 m-auto\">\n" +
                                                            "                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\" viewBox=\"0 -2 24 24\">\n" +
                                                            "                                <g id=\"Lager_17\" data-name=\"Lager 17\" transform=\"translate(-4 -6)\">\n" +
                                                            "                                    <path id=\"Path_19\" data-name=\"Path 19\" d=\"M22.091,16.681a1.97,1.97,0,0,0,.278-.732,1,1,0,0,0-.278-.679L16.574,9.538a2.116,2.116,0,0,1-.01-2.887l.028-.03a1.958,1.958,0,0,1,2.854-.008l8.267,8.613a1.077,1.077,0,0,1,.287.723,2.115,2.115,0,0,1-.287.775l-8.267,8.665a1.959,1.959,0,0,1-2.854-.012l-.028-.036a2.134,2.134,0,0,1,.01-2.9Z\" fill=\"#040505\"/>\n" +
                                                            "                                    <path id=\"Path_20\" data-name=\"Path 20\" d=\"M10.091,16.681a1.97,1.97,0,0,0,.278-.732,1,1,0,0,0-.278-.679L4.574,9.538a2.116,2.116,0,0,1-.01-2.887l.028-.03a1.958,1.958,0,0,1,2.854-.008l8.267,8.613a1.077,1.077,0,0,1,.287.723,2.115,2.115,0,0,1-.287.775L7.446,25.389a1.959,1.959,0,0,1-2.854-.012l-.028-.036a2.134,2.134,0,0,1,.01-2.9Z\" fill=\"#040505\"/>\n" +
                                                            "                                </g>\n" +
                                                            "                            </svg>\n" +
                                                            "                        </div>\n" +
                                                            "                        <div class=\"row\">\n" +
                                                            "                            <p>–°—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ç–µ—Å—Ç–∞ –æ—Ç–∫—Ä—ã—Ç–∞.</p>\n" +
                                                            "                            <p>–ï—Å–ª–∏ –≤—ã –Ω–µ –±—ã–ª–∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å —Ç–µ—Å—Ç–æ–º, –Ω–∞–∂–º–∏—Ç–µ <a class=\"link-primary\" href=\"" + testUrl +"\">—Å—é–¥–∞</a>.</p>\n" +
                                                            "                        </div>\n" +
                                                            "                    </div>",
                                                            ""
                                                        );
                                                    })
                                        )
                                    )
                                )
                        )
                        ;
                    });
            } else {
                // –ï—Å–ª–∏ –ø–æ–ø—ã—Ç–æ–∫ –Ω–µ –±—ã–ª–æ –Ω–∞–π–¥–µ–Ω–æ...
                tbody.append(
                    $("<tr>")
                        .append(
                            $("<td colspan='5' class='text-center'>").text("–í—ã –µ—â—ë –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –¥–∞–Ω–Ω—ã–π —Ç–µ—Å—Ç.")
                        )
                );
            }
        }
    ).catch(e => console.log(e));

    return $("<table id=\"testTries\" class=\"table\">")
        .append(
            $("<thead>").html('<tr>' +
                '<th scope="col">–ù–æ–º–µ—Ä –ø–æ–ø—ã—Ç–∫–∏</th>' +
                '<th scope="col">–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞</th>' +
                '<th scope="col">–û—Ü–µ–Ω–∫–∞</th>' +
                '<th scope="col">–°—Ç–∞—Ç—É—Å</th>' +
                '<th scope="col">–î–µ–π—Å—Ç–≤–∏–µ</th>' +
                '</tr>')
        )
        .append(tbody)
}

function showModal(headerHTML, bodyHTML, footerHTML){
    const modal = $("#defaultModal");

    modal.find(".modal-header").html(headerHTML);
    modal.find(".modal-body").html(bodyHTML);
    modal.find(".modal-footer").html(footerHTML);

    modal.modal('show');
}

function showErrorModal(errorText){
    showModal(
        "<h5 class=\"modal-title\">–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫</h5>",
        "<div class=\"container text-center\">\n" +
        "                        <div class=\"row col-6 m-auto\">\n" +
        "                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\" viewBox=\"0 0 72 72\" id=\"emoji\">\n" +
        "                                <g id=\"color\">\n" +
        "                                    <path fill=\"#ea5a47\" d=\"m58.14 21.78-7.76-8.013-14.29 14.22-14.22-14.22-8.013 8.013 14.36 14.22-14.36 14.22 8.014 8.013 14.22-14.22 14.29 14.22 7.76-8.013-14.22-14.22z\"/>\n" +
        "                                </g>\n" +
        "                                <g id=\"hair\"/>\n" +
        "                                <g id=\"skin\"/>\n" +
        "                                <g id=\"skin-shadow\"/>\n" +
        "                                <g id=\"line\">\n" +
        "                                    <path fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" d=\"m58.14 21.78-7.76-8.013-14.29 14.22-14.22-14.22-8.013 8.013 14.35 14.22-14.35 14.22 8.014 8.013 14.22-14.22 14.29 14.22 7.76-8.013-14.22-14.22z\"/>\n" +
        "                                </g>\n" +
        "                            </svg>\n" +
        "                        </div>\n" +
        "                        <div class=\"row\">\n" +
        "                            <p class='text-danger'>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:</p>\n" +
        "                            <p>" + errorText +"</p>\n" +
        "                            <p>–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏.</p>\n" +
        "                        </div>\n" +
        "                    </div>",
        ""
    );
}